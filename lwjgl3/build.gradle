plugins {
  id "java"
  id "application"
  id "io.github.fourlastor.construo" version "1.3.0"
}

import io.github.fourlastor.construo.Target

sourceSets.main.resources.srcDirs += [rootProject.file('assets').path]

application {
  mainClass = 'savetheking.game.lwjgl3.Lwjgl3Launcher'
}

dependencies {
  implementation "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
  implementation "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
  implementation project(':core')
}

tasks.withType(JavaCompile) {
  sourceCompatibility = JavaVersion.VERSION_17
  targetCompatibility = JavaVersion.VERSION_17
}

jar {
  archiveFileName.set("${appName}-${projectVersion}.jar")
  duplicatesStrategy = DuplicatesStrategy.EXCLUDE
  dependsOn configurations.runtimeClasspath
  from {
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
  manifest {
    attributes 'Main-Class': application.mainClass
  }
  doLast {
    file(archiveFile).setExecutable(true, false)
  }
}

construo {
  name.set(appName)
  humanName.set(appName)
  version.set(projectVersion)

  targets.configure {
    create("linuxX64", Target.Linux) {
      architecture.set(Target.Architecture.X86_64)
      jdkUrl.set("https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.11%2B9/OpenJDK17U-jdk_x64_linux_hotspot_17.0.11_9.tar.gz")
    }
    create("macM1", Target.MacOs) {
      architecture.set(Target.Architecture.AARCH64)
      jdkUrl.set("https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.11%2B9/OpenJDK17U-jdk_aarch64_mac_hotspot_17.0.11_9.tar.gz")
      identifier.set("savetheking.game." + appName)
      macIcon.set(project.file("icons/logo.icns"))
    }
    create("macX64", Target.MacOs) {
      architecture.set(Target.Architecture.X86_64)
      jdkUrl.set("https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.11%2B9/OpenJDK17U-jdk_x64_mac_hotspot_17.0.11_9.tar.gz")
      identifier.set("savetheking.game." + appName)
      macIcon.set(project.file("icons/logo.icns"))
    }
    create("winX64", Target.Windows) {
      architecture.set(Target.Architecture.X86_64)
      jdkUrl.set("https://github.com/adoptium/temurin17-binaries/releases/download/jdk-17.0.11%2B9/OpenJDK17U-jdk_x64_windows_hotspot_17.0.11_9.zip")
    }
  }
}

tasks.register('dist') {
  dependsOn 'jar'
}

distributions {
  main {
    contents {
      into('libs') {
        from configurations.runtimeClasspath
      }
    }
  }
}

startScripts.dependsOn(':lwjgl3:jar')
startScripts.classpath = project.tasks.jar.outputs.files
